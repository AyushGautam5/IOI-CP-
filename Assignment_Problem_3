/*QUESTION-3
Given two sorted arrays, merge them to get another sorted array

Example Input:
5                #size of first array
2 4 11 17 91     #first array

4                #size of second array
3 7 9 100        #second array

Example Output :
2 3 4 7 9 11 17 91 100
*/

#include <iostream>
#include <vector>

std::vector<int> mergeSortedArrays(const std::vector<int>& arr1, const std::vector<int>& arr2) {
    std::vector<int> mergedArray;
    int i = 0, j = 0;
    
    while (i < arr1.size() && j < arr2.size()) {
        if (arr1[i] < arr2[j]) {
            mergedArray.push_back(arr1[i]);
            i++;
        } else {
            mergedArray.push_back(arr2[j]);
            j++;
        }
    }
    
    while (i < arr1.size()) {
        mergedArray.push_back(arr1[i]);
        i++;
    }
    
    while (j < arr2.size()) {
        mergedArray.push_back(arr2[j]);
        j++;
    }
    
    return mergedArray;
}

int main() {
    int n1, n2;
    
    std::cout << "Enter the size of the first array: ";
    std::cin >> n1;
    
    std::cout << "Enter the elements of the first array: ";
    std::vector<int> arr1(n1);
    for (int i = 0; i < n1; i++) {
        std::cin >> arr1[i];
    }
    
    std::cout << "Enter the size of the second array: ";
    std::cin >> n2;
    
    std::cout << "Enter the elements of the second array: ";
    std::vector<int> arr2(n2);
    for (int i = 0; i < n2; i++) {
        std::cin >> arr2[i];
    }
    
    std::vector<int> mergedArray = mergeSortedArrays(arr1, arr2);
    
    std::cout << "Merged sorted array: ";
    for (int num : mergedArray) {
        std::cout << num << " ";
    }
    std::cout << std::endl;
    
    return 0;
}
